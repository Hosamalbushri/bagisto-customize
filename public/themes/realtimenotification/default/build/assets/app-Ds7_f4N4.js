var a=(t,i)=>()=>(i||t((i={exports:{}}).exports,i),i.exports);var c=a((f,o)=>{class n{constructor(){this.firebaseApp=null,this.analytics=null,this.messaging=null,this.config=null,this.vapidKey=null,this.isInitialized=!1,this.init()}async init(){try{if(this.config=window.firebaseConfig||null,this.vapidKey=window.firebaseVapidKey||null,!this.config){console.warn("Firebase config not found");return}await this.initializeFirebase(),await this.setupServiceWorker(),await this.setupMessaging(),this.isInitialized=!0,console.log("✅ Firebase Notification App initialized successfully")}catch(i){console.error("❌ Firebase Notification App initialization error:",i)}}async initializeFirebase(){try{firebase.apps.length===0?this.firebaseApp=firebase.initializeApp(this.config):this.firebaseApp=firebase.app(),this.analytics=firebase.analytics(),this.messaging=firebase.messaging(),console.log("✅ Firebase initialized successfully")}catch(i){throw console.error("❌ Firebase initialization error:",i),i}}async setupServiceWorker(){if("serviceWorker"in navigator)try{const i=await navigator.serviceWorker.register(window.serviceWorkerUrl);console.log("✅ Service Worker registered successfully:",i)}catch(i){console.error("❌ Service Worker registration failed:",i)}}async setupMessaging(){if(!this.messaging){console.warn("Messaging not available");return}await this.getFCMToken(),this.setupMessageHandlers()}async getFCMToken(){try{const i=await this.messaging.getToken({vapidKey:this.vapidKey});i?(console.log("🔑 FCM Token:",i),await this.saveTokenToServer(i),await this.subscribeToTopic(i)):(console.log("❌ No FCM token available"),await this.requestNotificationPermission())}catch(i){console.error("❌ Error getting FCM token:",i)}}async saveTokenToServer(i){try{const e=await fetch("/realtimenotification/save-token",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.getCSRFToken()},body:JSON.stringify({token:i})});e.ok?console.log("✅ Token saved successfully"):console.error("❌ Error saving token:",e.statusText)}catch(e){console.error("❌ Error saving token:",e)}}async subscribeToTopic(i){try{const s=await firebase.subscribeToTopic([i],"admin_order");console.log("✅ Successfully subscribed to topic:",s)}catch(e){console.error("❌ Error subscribing to topic:",e)}}async requestNotificationPermission(){try{if(!this.messaging){console.log("Messaging not available");return}await Notification.requestPermission()==="granted"?(console.log("✅ Notification permission granted"),await this.getFCMToken()):console.log("❌ Notification permission denied")}catch(i){console.error("❌ Error requesting permission:",i)}}setupMessageHandlers(){this.messaging.onMessage(i=>{var e,s;console.log("📨 Message received:",i),this.showNotification(((e=i.notification)==null?void 0:e.title)||"إشعار جديد",((s=i.notification)==null?void 0:s.body)||"لديك إشعار جديد")})}showNotification(i,e){const s=document.createElement("div");s.className="firebase-notification success",s.innerHTML=`
            <button class="close-btn" onclick="this.parentElement.remove()">&times;</button>
            <div class="title">${i}</div>
            <div class="message">${e}</div>
        `,document.body.appendChild(s),setTimeout(()=>{s.parentElement&&s.remove()},5e3)}getCSRFToken(){const i=document.querySelector('meta[name="csrf-token"]');return i?i.getAttribute("content"):""}async sendCustomNotification(i,e,s={}){try{this.showNotification(i,e)}catch(r){console.error("❌ Error sending custom notification:",r)}}getStatus(){return{isInitialized:this.isInitialized,hasFirebase:!!this.firebaseApp,hasMessaging:!!this.messaging,hasAnalytics:!!this.analytics}}}document.addEventListener("DOMContentLoaded",function(){typeof firebase<"u"?(window.firebaseNotificationApp=new n,window.firebaseNotification={show:(t,i)=>window.firebaseNotificationApp.showNotification(t,i),requestPermission:()=>window.firebaseNotificationApp.requestNotificationPermission(),sendCustom:(t,i,e)=>window.firebaseNotificationApp.sendCustomNotification(t,i,e),getStatus:()=>window.firebaseNotificationApp.getStatus(),messaging:()=>window.firebaseNotificationApp.messaging,analytics:()=>window.firebaseNotificationApp.analytics,firebaseApp:()=>window.firebaseNotificationApp.firebaseApp}):console.warn("Firebase SDK not loaded")});typeof o<"u"&&o.exports&&(o.exports=n)});export default c();
